name: Deploy

on:
  push:
    branches:
      - master

jobs:
  phpcs:
    name: PHPCS
    runs-on: ubuntu-latest
    container:
      image: baijunyao/php:8.2-fpm-pgsql
      volumes:
        - /__w/tutoring-education-backend/tutoring-education-backend:/app
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Initial
        run: |
          cp .env.example .env
          composer install
      - name: PHP CS Fixer
        run: |
          ./vendor/bin/php-cs-fixer fix --verbose --show-progress=dots --dry-run --diff

  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    container:
      image: baijunyao/php:8.2-fpm-pgsql
      volumes:
        - /__w/tutoring-education-backend/tutoring-education-backend:/app
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Initial
        run: |
          cp .env.example .env
          composer install
      - name: PHPStan
        run: |
          composer phpstan

  phpunit:
    name: PHPUnit
    runs-on: ubuntu-latest
    services:
      mysql:
        image: baijunyao/mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: tutoring
          MYSQL_DATABASE: tutoring
    container:
      image: baijunyao/php:8.2-fpm-pgsql
      volumes:
        - /__w/tutoring-education-backend/tutoring-education-backend:/app
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Initial
        run: |
          cp .env.actions .env
          composer install
          php artisan key:generate
          php artisan passport:keys
          php artisan migrate
          php artisan db:seed
      - name: Test
        run: |
          composer test

  deploy:
    runs-on: ubuntu-latest
    needs: [phpcs, phpstan, phpunit]
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.13.15
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
